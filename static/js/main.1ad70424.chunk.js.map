{"version":3,"sources":["App.js","index.js"],"names":["count","App","state","quote","author","rand","prevQuote","axios","get","then","response","console","log","data","setState","catch","error","fetchQuote","Math","floor","random","length","this","className","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+QAKIA,EAAQ,EAENC,E,4MACFC,MAAQ,CAAEC,MAAO,GAAIC,OAAQ,GAAIC,KAAK,I,EAKtCC,UAAY,WACRC,IAAMC,IAAI,yIACTC,MAAK,SAACC,GACHC,QAAQC,IAAI,kBAAkB,EAAKV,MAAMG,MACzC,MAA0BK,EAASG,KAAK,EAAKX,MAAMG,KAAKL,MAAhDG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,EAAKU,SAAS,CAAEX,QAAOC,cAE1BW,OAAM,SAACC,GACJL,QAAQC,IAAII,O,EAGpBC,WAAa,WACTV,IAAMC,IAAI,yIACTC,MAAK,SAACC,GACH,IAAML,EAAOa,KAAKC,MAAOD,KAAKE,SAASV,EAASG,KAAKQ,QACrD,EAA0BX,EAASG,KAAKR,GAAhCF,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,EAAKU,SAAS,CAAEX,QAAOC,WACvB,EAAKU,UAAS,SAAAZ,GAAK,MAAK,CACpBG,KAAK,CAAEA,GAAH,mBAAYH,EAAMG,WAE1BL,EAAQ,EACRW,QAAQC,IAAI,aAAaP,GACzBM,QAAQC,IAAIF,EAASG,KAAKR,OAE7BU,OAAM,SAACC,GACJL,QAAQC,IAAII,O,uDA7BpB,WACIL,QAAQC,IAAI,uBACZU,KAAKL,e,oBA+BT,WACI,MAA0BK,KAAKpB,MAAvBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACf,OACI,qBAAKmB,UAAY,MAAjB,SACI,sBAAKA,UAAY,OAAjB,UACI,oBAAIA,UAAU,UAAd,SAAyBpB,IACzB,oBAAIoB,UAAU,SAAd,SAAwBnB,IACxB,sBAAKmB,UAAU,cAAf,UACI,wBAAQA,UAAU,SAASC,QAASF,KAAKhB,UAAzC,SACI,+CAEJ,wBAAQiB,UAAU,SAASC,QAASF,KAAKL,WAAzC,SACI,4D,GA/CVQ,IAAMC,WAsDPzB,ICxDjB0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1ad70424.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport './App.css';\r\n\r\nlet count = 1;\r\n\r\nclass App extends React.Component {\r\n    state = { quote: '', author: '', rand:[]};\r\n    componentDidMount() {\r\n        console.log('COMPONENT DID MOUNT');\r\n        this.fetchQuote();\r\n    }\r\n    prevQuote = () => {\r\n        axios.get('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\r\n        .then((response) => {\r\n            console.log('prev_quote_id: ',this.state.rand);\r\n            const { quote, author } = response.data[this.state.rand[count++]];\r\n            this.setState({ quote, author })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n    fetchQuote = () => {\r\n        axios.get('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\r\n        .then((response) => {\r\n            const rand = Math.floor((Math.random()*response.data.length));\r\n            const { quote, author } = response.data[rand];\r\n            this.setState({ quote, author })\r\n            this.setState(state => ({\r\n                rand: [rand, ...state.rand]\r\n              }));\r\n            count = 1;\r\n            console.log('quote_id: ',rand);\r\n            console.log(response.data[rand]);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { quote, author } = this.state;\r\n        return (\r\n            <div className = \"app\">\r\n                <div className = \"card\">\r\n                    <h1 className=\"heading\">{quote}</h1>\r\n                    <h2 className=\"author\">{author}</h2>\r\n                    <div className=\"btn_wrapper\">\r\n                        <button className=\"button\" onClick={this.prevQuote}>\r\n                            <span>Poprzedni</span>\r\n                        </button>\r\n                        <button className=\"button\" onClick={this.fetchQuote}>\r\n                            <span>Nowy cytat</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} export default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}